variables: {}

builders:
  - &builder-definition
    type: virtualbox-iso
    name: vbox-gce-builder

    iso_urls:
      - cd66.iso
      - https://cdn.openbsd.org/pub/OpenBSD/snapshots/amd64/cd66.iso
    iso_checksum_type: sha256
    iso_checksum: 9631b226b7f717182cef806b052dcacc7d9643ce1f975681389348317a9b91db

    vm_name: "openbsd66-gce.x86-64"
    disk_size: 4096
    memory: 512
    cpus: 1
    guest_os_type: "OpenBSD_64"
    headless: true
    guest_additions_mode: disable
    virtualbox_version_file: '' # Do not upload version file

    http_directory: "http"

    boot_wait: 20s
    boot_command:
      - S<enter><wait>
      - dhclient em0<enter><wait><wait><wait>
      - ftp -o install.conf http://{{ .HTTPIP }}:{{ .HTTPPort }}/install.conf<enter><wait>
      - sed -i 's|<<ROOT_PUBKEY>>|{{ .SSHPublicKey }}|' /install.conf<enter><wait>
      - install -a -f /install.conf && reboot<enter>
    ssh_wait_timeout: 10000s  # Installation may take some time, let's make sure we won't timeout.
    ssh_username: root
    shutdown_command: 'halt -p'

provisioners:
  - type: shell
    script: scripts/prep-gce.sh
    only: ['vbox-gce-builder']

post-processors:
  # The following list of post-processors will apply to `vbox-gce-builder`, and will prepare and
  # upload the image to GCE.
  # `googlecompute-import` post-processor needs `.tar.gz`-ipped raw disk image. We need to convert
  # VMDK used by VirtualBox to raw image. We will use `shell-local` post-processor for that. Since
  # it can't get a list of input artifacts, nor pass list of output artifacts to later
  # post-processors we use `manifest` and `artifice` post-processors for that task.
  # Finally we compress the image (we must use `compress` post-processor due to hardcoded check in
  # `googlecompute-import`) and import it to GCE.
  -
    - type: manifest
      strip_path: true
      output: output/manifest.json
      only:
        - vbox-gce-builder
    - type: shell-local
      inline:
        - jq -r '.builds[] | (.name + "/" + .files[].name)' output/manifest.json |
            grep '\.vmdk$' > output/disk-path
        # We can create image only from a single disk
        - if [[ $(cat output/disk-path | wc -l) > 1 ]]; then exit 1; fi
        - qemu-img convert -f vmdk -O raw output-`cat output/disk-path` output/disk.raw
        - rm output/manifest.json output/disk-path
      only:
        - vbox-gce-builder
    - type: artifice
      files:
        - output/disk.raw
      only:
        - vbox-gce-builder
    - type: compress
      output: "output/disk.tar.gz"
      only:
        - vbox-gce-builder
    - type: googlecompute-import
      only:
        - vbox-gce-builder
      account_file: '{{ user `gcp_account_file` }}'
      bucket: '{{ user `gcp_bucket` }}'
      image_name: openbsd-66-minimal
      project_id: '{{ user `gcp_project_id` }}'
      image_description: Minimal OpenBSD 6.6 image
      image_family: openbsd
